/*------------------------------------*\
    #FLEXBOX
\*------------------------------------*/

/**
 * Inuitcss-flexbox objects is a layout system based on flexbox capabilities.
 */

// Predefine the variables below in order to alter and enable specific features.
$inuit-layout-namespace:                $inuit-namespace !default;

$inuit-layout-gutter:                   $inuit-base-spacing-unit--small !default;
$inuit-layout-columns-number:           12 !default;

$inuit-layout-flex-grid-enable:         false !default;
$inuit-layout-fixed-grid-enable:        false !default;
$inuit-layout-enable-order:             false !default;
$inuit-layout-enable-reverse:           false !default;
$inuit-layout-enable-offset:            false !default;

$inuit-generate-responsive-item-alias:  null !default;
$inuit-layout-flex-grid-class:          'layout' !default;




// Internally used mixin to quickly generate our different variants based upon
// the breakpoints defined in `settings.responsive`.
@mixin inuit-generate-responsive-item() {
  @each $breakpoint in $breakpoints {

      $inuit-generate-responsive-item-alias:      nth($breakpoint, 1);
      $inuit-generate-responsive-item-condition:  nth($breakpoint, 2);

      @if ($inuit-generate-responsive-item-alias != "retina") {

          @include media-query($inuit-generate-responsive-item-alias) {
              @content;
          }

      }

      $inuit-generate-responsive-item-alias: null;

  }
}





/**
 * Layout
 *
 * 1. Defines the default behaviour for how flex items are laid out along the
 *    cross axis on the current line. Item are aligned at the top. Items are
 *    aligned to the top.
 * 2. Defines the alignment along the main axis. Items are aligne on the left.
 */
.#{$inuit-layout-namespace}#{$inuit-layout-flex-grid-class} {
  @include flexbox();
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start; /* [1] */
  justify-content: flex-start; /* [2] */
  margin-right: -$inuit-layout-gutter;
  margin-left: -$inuit-layout-gutter;
}





/**
 * Flex item
 */
.#{$inuit-layout-namespace}#{$inuit-layout-flex-grid-class} .#{$inuit-layout-namespace}layout__item {
  padding-right: $inuit-layout-gutter;
  padding-left: $inuit-layout-gutter;
}





//------------------------------------
// Flexible grid system
//------------------------------------

@if $inuit-layout-flex-grid-enable == true {
  $i: 1;
  @while $i <= $inuit-layout-columns-number {
    .#{$inuit-layout-namespace}layout--flex .#{$inuit-layout-namespace}layout__item--#{$i} {
      @include flex($i);
    }
    $i: $i + 1;
  }

  .#{$inuit-layout-namespace}layout--flex .#{$inuit-layout-namespace}layout__item--full {
    @include flex(1 1 100%);
  }

  @if $inuit-responsive-settings == true {
    @include inuit-generate-responsive-item() {
      $i: 1;
      @while $i <= $inuit-layout-columns-number {
        .#{$inuit-layout-namespace}layout--flex .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--#{$i} {
          @include flex($i);
        }
        $i: $i + 1;
      }

      .#{$inuit-layout-namespace}layout--flex .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--full {
        @include flex(1 1 100%);
      }
    }
  } @else {
    @warn "There is no breakpoints define. Include inuit-responsive-settings.";
  }

}





//------------------------------------
// Fixed grid system
//------------------------------------

@if $inuit-layout-fixed-grid-enable == true {
  $i: 1;
  @while $i <= $inuit-layout-columns-number {
    .#{$inuit-layout-namespace}layout--fixed .#{$inuit-layout-namespace}layout__item--#{$i} {
      $flex-basis: 100/$inuit-layout-columns-number*$i*1%;
      @include flex(0 1 $flex-basis);
    }
    $i: $i + 1;
  }

  .#{$inuit-layout-namespace}layout--fixed .#{$inuit-layout-namespace}layout__item--full {
    @include flex(1 1 100%);
  }

  @if $inuit-responsive-settings == true {
    @include inuit-generate-responsive-item() {
      $i: 1;
      @while $i <= $inuit-layout-columns-number {
        .#{$inuit-layout-namespace}layout--fixed .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--#{$i} {
          $flex-basis: 100/$inuit-layout-columns-number*$i*1%;
          @include flex(0 1 $flex-basis);
        }
        $i: $i + 1;
      }

      .#{$inuit-layout-namespace}layout--fixed .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--full {
        @include flex(0 1 100%);
      }
    }
  } @else {
    @warn "There is no breakpoints define. Include inuit-responsive-settings.";
  }

}





//------------------------------------
// Order
//------------------------------------

@if $inuit-layout-enable-order == true {
  $i: 1;
  @while $i <= $inuit-layout-columns-number {
    .#{$inuit-layout-namespace}layout__item--order-#{$i} {
      order: $i;
    }
    $i: $i + 1;
  }

  @if $inuit-responsive-settings == true {
    @include inuit-generate-responsive-item() {
      $i: 1;
      @while $i <= $inuit-layout-columns-number {
        .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--order-#{$i} {
          order: $i;
        }
        $i: $i + 1;
      }
    }
  }

}





//------------------------------------
// Reverse
//------------------------------------

@if $inuit-layout-enable-order == true {
  /**
   * Reverse item direction
   */
  .#{$inuit-layout-namespace}layout--reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  }
}





//------------------------------------
// Offset
//------------------------------------

// offsets are only available for fixed grid layout
@if $inuit-layout-enable-offset == true and $inuit-layout-fixed-grid-enable == true {
  $i: 1;
  @while $i <= $inuit-layout-columns-number {
    .#{$inuit-layout-namespace}layout__item--offset-#{$i} {
      margin-left: 100/$inuit-layout-columns-number*$i*1%;
    }
    $i: $i + 1;
  }

  @if $inuit-responsive-settings == true {
    @include inuit-generate-responsive-item() {
      $i: 1;
      @while $i <= $inuit-layout-columns-number {
        .#{$inuit-layout-namespace}layout__item--#{$inuit-generate-responsive-item-alias}--offset-#{$i} {
          margin-left: 100/$inuit-layout-columns-number*$i*1%;
        }
        $i: $i + 1;
      }
    }
  }

}
